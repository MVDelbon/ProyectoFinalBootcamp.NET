@page "/clientes"
@inject HttpClient Http
@inject SweetAlertService Swal;
@inject IClienteService clienteService;
@using CurrieTechnologies.Razor.SweetAlert2;
@using Microsoft.EntityFrameworkCore
@using ProyectoFinalBlazor2.Data
@using ProyectoFinalBlazor2.Data.Dtos
@using ProyectoFinalBlazor2.Data.Services
@using ProyectoFinalBlazor2.Data.Dtos.Cliente

<h3><font color="white">Clientes</font></h3>
<NuevoClienteButton />

        @if (listaClientes == null)
        {

            <tr>
                <td colspan="5" align="center">
                    <img style="width:50px" src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" />
                </td>
            </tr>
        }
        else
        {
            @foreach (var cliente in listaClientes)
            {

                 <RadzenCard Variant="@variant" Class="rz-my-12 rz-mx-auto" Style="max-width: 420px">
                     <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">
                @*        <RadzenImage Path="@order?.Employee?.Photo" Style="width: 100px; height: 100px; border-radius: 50%;" /> *@
                          <RadzenStack Gap="0">
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Cliente</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@(cliente.NombreCliente + " " + cliente.ApellidoCliente)</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Teléfono</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@cliente.Telefono</b></RadzenText>
                          </RadzenStack>
                     </RadzenStack>
                    <a class="btn btn-primary" href="/cliente/@cliente.fichaClienteEntityId">Ver ficha</a>

            <a class="btn btn-primary btn-sm" href="/editarCliente/@cliente.fichaClienteEntityId">
                            <i class="oi oi-pencil"></i>
                     </a>
                     <button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(() => Delete(cliente.fichaClienteEntityId))">
                            <i class="oi oi-trash"></i>
                     </button>
                 </RadzenCard>

                    
            
            }
        }

@code {
    Variant variant = Variant.Filled;
    private List<ClienteResponseModel>? listaClientes = null;


    protected override async Task OnInitializedAsync()
    {
        listaClientes = await clienteService.GetClientes();
    }

    private async Task Delete(int fichaClienteEntityId)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar cliente",
                Text = "Deseas eliminar el cliente?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });
        if (resultado.IsConfirmed)
        {
                await Http.DeleteAsync(requestUri: $"api/FichaCliente/{fichaClienteEntityId}");
                await clienteService.GetClientes();
        }
    }
}